/*
Spot

A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entity

import (
	"encoding/json"
)

// checks if the V1SpotsIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SpotsIdGet200Response{}

// V1SpotsIdGet200Response struct for V1SpotsIdGet200Response
type V1SpotsIdGet200Response struct {
	Result *Spot `json:"result,omitempty"`
	Status *int32 `json:"status,omitempty"`
}

// NewV1SpotsIdGet200Response instantiates a new V1SpotsIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SpotsIdGet200Response() *V1SpotsIdGet200Response {
	this := V1SpotsIdGet200Response{}
	return &this
}

// NewV1SpotsIdGet200ResponseWithDefaults instantiates a new V1SpotsIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SpotsIdGet200ResponseWithDefaults() *V1SpotsIdGet200Response {
	this := V1SpotsIdGet200Response{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *V1SpotsIdGet200Response) GetResult() Spot {
	if o == nil || IsNil(o.Result) {
		var ret Spot
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SpotsIdGet200Response) GetResultOk() (*Spot, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *V1SpotsIdGet200Response) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Spot and assigns it to the Result field.
func (o *V1SpotsIdGet200Response) SetResult(v Spot) {
	o.Result = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1SpotsIdGet200Response) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SpotsIdGet200Response) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1SpotsIdGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *V1SpotsIdGet200Response) SetStatus(v int32) {
	o.Status = &v
}

func (o V1SpotsIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SpotsIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1SpotsIdGet200Response struct {
	value *V1SpotsIdGet200Response
	isSet bool
}

func (v NullableV1SpotsIdGet200Response) Get() *V1SpotsIdGet200Response {
	return v.value
}

func (v *NullableV1SpotsIdGet200Response) Set(val *V1SpotsIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SpotsIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SpotsIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SpotsIdGet200Response(val *V1SpotsIdGet200Response) *NullableV1SpotsIdGet200Response {
	return &NullableV1SpotsIdGet200Response{value: val, isSet: true}
}

func (v NullableV1SpotsIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SpotsIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


