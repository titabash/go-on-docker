/*
Spot

A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entity

import (
	"encoding/json"
	"time"
)

// checks if the Checkin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Checkin{}

// Checkin struct for Checkin
type Checkin struct {
	Id string `json:"id" firestore:"id"`
	UserId string `json:"user_id" firestore:"user_id"`
	SpotId string `json:"spot_id" firestore:"spot_id"`
	Photos []Photo `json:"photos" firestore:"photos"`
	Address Address `json:"address" firestore:"address"`
	Location Location `json:"location" firestore:"location"`
	CreatedAt time.Time `json:"created_at" firestore:"created_at"`
	UpdatedAt time.Time `json:"updated_at" firestore:"updated_at"`
}

// NewCheckin instantiates a new Checkin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckin(id string, userId string, spotId string, photos []Photo, address Address, location Location, createdAt time.Time, updatedAt time.Time) *Checkin {
	this := Checkin{}
	this.Id = id
	this.UserId = userId
	this.SpotId = spotId
	this.Photos = photos
	this.Address = address
	this.Location = location
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCheckinWithDefaults instantiates a new Checkin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckinWithDefaults() *Checkin {
	this := Checkin{}
	return &this
}

// GetId returns the Id field value
func (o *Checkin) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Checkin) SetId(v string) {
	o.Id = v
}

// GetUserId returns the UserId field value
func (o *Checkin) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Checkin) SetUserId(v string) {
	o.UserId = v
}

// GetSpotId returns the SpotId field value
func (o *Checkin) GetSpotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpotId
}

// GetSpotIdOk returns a tuple with the SpotId field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetSpotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpotId, true
}

// SetSpotId sets field value
func (o *Checkin) SetSpotId(v string) {
	o.SpotId = v
}

// GetPhotos returns the Photos field value
func (o *Checkin) GetPhotos() []Photo {
	if o == nil {
		var ret []Photo
		return ret
	}

	return o.Photos
}

// GetPhotosOk returns a tuple with the Photos field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetPhotosOk() ([]Photo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Photos, true
}

// SetPhotos sets field value
func (o *Checkin) SetPhotos(v []Photo) {
	o.Photos = v
}

// GetAddress returns the Address field value
func (o *Checkin) GetAddress() Address {
	if o == nil {
		var ret Address
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetAddressOk() (*Address, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *Checkin) SetAddress(v Address) {
	o.Address = v
}

// GetLocation returns the Location field value
func (o *Checkin) GetLocation() Location {
	if o == nil {
		var ret Location
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetLocationOk() (*Location, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *Checkin) SetLocation(v Location) {
	o.Location = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Checkin) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Checkin) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Checkin) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Checkin) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Checkin) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o Checkin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Checkin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user_id"] = o.UserId
	toSerialize["spot_id"] = o.SpotId
	toSerialize["photos"] = o.Photos
	toSerialize["address"] = o.Address
	toSerialize["location"] = o.Location
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableCheckin struct {
	value *Checkin
	isSet bool
}

func (v NullableCheckin) Get() *Checkin {
	return v.value
}

func (v *NullableCheckin) Set(val *Checkin) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckin) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckin(val *Checkin) *NullableCheckin {
	return &NullableCheckin{value: val, isSet: true}
}

func (v NullableCheckin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


