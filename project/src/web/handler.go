/*
 * Spot
 *
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package web

import (
	"app/adapter/controller"
	"app/adapter/gateway"
	"app/adapter/presenter"
	"app/usecase"
	openapi "app/web/go"
	"context"
	"errors"
	"net/http"
)

// Handler is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type Handler struct {
}

// NewDefaultApiService creates a default api service
func NewHandler() openapi.DefaultApiServicer {
	return &Handler{}
}

// HealthcheckGet - Health Checker
func (s *Handler) HealthcheckGet(ctx context.Context) (openapi.ImplResponse, error) {
	return openapi.Response(200, nil), nil
}

// RootGet - Root path handler
func (s *Handler) RootGet(ctx context.Context) (openapi.ImplResponse, error) {
	// TODO - update RootGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("RootGet method not implemented")
}

// V1SpotsGet - Get all spots
func (s *Handler) V1SpotsGet(ctx context.Context, lastSpotId string) (openapi.ImplResponse, error) {
	ctx = context.WithValue(ctx, "lastSpotId", lastSpotId)
	spotRepository := gateway.NewSpotGateway(ctx)
	googlemapRepository := gateway.NewGoogleMapGateway()
	spotOutputPort := presenter.NewBaseJsonPresenter()
	uc := usecase.NewSpotWebUsecase(spotRepository, googlemapRepository, spotOutputPort)
	c := controller.NewSpotContoller(uc)
	res, _ := c.GetAllSpots(ctx)
	return openapi.Response(200, res), nil
}

// V1SpotsIdGet - Get a spot
func (s *Handler) V1SpotsIdGet(ctx context.Context, id string) (openapi.ImplResponse, error) {
	// TODO - update V1SpotsIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, V1SpotsIdGet200Response{}) or use other options such as http.Ok ...
	//return Response(200, V1SpotsIdGet200Response{}), nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("V1SpotsIdGet method not implemented")
}
